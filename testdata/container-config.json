{"architecture":"amd64","config":{"ExposedPorts":{"80/tcp":{},"8080/tcp":{}},"Env":["PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin","NGINX_VERSION=1.27.2","PKG_RELEASE=1","DYNPKG_RELEASE=1","NJS_VERSION=0.8.6","NJS_RELEASE=1","BASE_URL=/","PORT=8080"],"Entrypoint":["/docker-entrypoint.sh"],"Cmd":["nginx","-g","daemon off;"],"Labels":{"maintainer":"vladimir.gorej@smartbear.com","org.opencontainers.image.authors":"vladimir.gorej@smartbear.com","org.opencontainers.image.source":"https://github.com/swagger-api/swagger-editor","org.opencontainers.image.url":"https://editor.swagger.io"},"StopSignal":"SIGQUIT","ArgsEscaped":true,"OnBuild":null},"created":"2024-11-11T11:38:46.357162273Z","history":[{"created":"2024-09-06T22:20:07.740564901Z","created_by":"/bin/sh -c #(nop) ADD file:5758b97d8301c84a204a6e516241275d785a7cade40b2fb99f01fe122482e283 in / "},{"created":"2024-09-06T22:20:07.972381771Z","created_by":"/bin/sh -c #(nop)  CMD [\"/bin/sh\"]","empty_layer":true},{"created":"2024-10-02T17:55:35Z","created_by":"LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>","comment":"buildkit.dockerfile.v0","empty_layer":true},{"created":"2024-10-02T17:55:35Z","created_by":"ENV NGINX_VERSION=1.27.2","comment":"buildkit.dockerfile.v0","empty_layer":true},{"created":"2024-10-02T17:55:35Z","created_by":"ENV PKG_RELEASE=1","comment":"buildkit.dockerfile.v0","empty_layer":true},{"created":"2024-10-02T17:55:35Z","created_by":"ENV DYNPKG_RELEASE=1","comment":"buildkit.dockerfile.v0","empty_layer":true},{"created":"2024-10-02T17:55:35Z","created_by":"RUN /bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 bash                 alpine-sdk                 findutils                 curl             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -L -O https://github.com/nginx/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"6982e2df739645fc72db5bdf994032f799718230e7016e811d9d482e5cf41814c888660ca9a68814d5e99ab571e892ada3bd43166e720cbf04c7f85b6934772c *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make base                 && apk index --allow-untrusted -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del --no-network .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del --no-network .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -f \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     && apk add --no-cache $runDeps     && apk del --no-network .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d # buildkit","comment":"buildkit.dockerfile.v0"},{"created":"2024-10-02T17:55:35Z","created_by":"COPY docker-entrypoint.sh / # buildkit","comment":"buildkit.dockerfile.v0"},{"created":"2024-10-02T17:55:35Z","created_by":"COPY 10-listen-on-ipv6-by-default.sh /docker-entrypoint.d # buildkit","comment":"buildkit.dockerfile.v0"},{"created":"2024-10-02T17:55:35Z","created_by":"COPY 15-local-resolvers.envsh /docker-entrypoint.d # buildkit","comment":"buildkit.dockerfile.v0"},{"created":"2024-10-02T17:55:35Z","created_by":"COPY 20-envsubst-on-templates.sh /docker-entrypoint.d # buildkit","comment":"buildkit.dockerfile.v0"},{"created":"2024-10-02T17:55:35Z","created_by":"COPY 30-tune-worker-processes.sh /docker-entrypoint.d # buildkit","comment":"buildkit.dockerfile.v0"},{"created":"2024-10-02T17:55:35Z","created_by":"ENTRYPOINT [\"/docker-entrypoint.sh\"]","comment":"buildkit.dockerfile.v0","empty_layer":true},{"created":"2024-10-02T17:55:35Z","created_by":"EXPOSE map[80/tcp:{}]","comment":"buildkit.dockerfile.v0","empty_layer":true},{"created":"2024-10-02T17:55:35Z","created_by":"STOPSIGNAL SIGQUIT","comment":"buildkit.dockerfile.v0","empty_layer":true},{"created":"2024-10-02T17:55:35Z","created_by":"CMD [\"nginx\" \"-g\" \"daemon off;\"]","comment":"buildkit.dockerfile.v0","empty_layer":true},{"created":"2024-10-02T17:55:35Z","created_by":"ENV NJS_VERSION=0.8.6","comment":"buildkit.dockerfile.v0","empty_layer":true},{"created":"2024-10-02T17:55:35Z","created_by":"ENV NJS_RELEASE=1","comment":"buildkit.dockerfile.v0","empty_layer":true},{"created":"2024-10-02T17:55:35Z","created_by":"RUN /bin/sh -c set -x     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${DYNPKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${DYNPKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${DYNPKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${NJS_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 libedit-dev                 bash                 alpine-sdk                 findutils                 curl             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -L -O https://github.com/nginx/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"6982e2df739645fc72db5bdf994032f799718230e7016e811d9d482e5cf41814c888660ca9a68814d5e99ab571e892ada3bd43166e720cbf04c7f85b6934772c *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make module-geoip module-image-filter module-njs module-xslt                 && apk index --allow-untrusted -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del --no-network .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del --no-network .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -f \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && apk add --no-cache curl ca-certificates # buildkit","comment":"buildkit.dockerfile.v0"},{"created":"2024-11-06T09:00:45.222159716Z","created_by":"LABEL maintainer=vladimir.gorej@smartbear.com org.opencontainers.image.authors=vladimir.gorej@smartbear.com org.opencontainers.image.url=https://editor.swagger.io org.opencontainers.image.source=https://github.com/swagger-api/swagger-editor","comment":"buildkit.dockerfile.v0","empty_layer":true},{"created":"2024-11-06T09:00:45.222159716Z","created_by":"ENV BASE_URL=/ PORT=8080","comment":"buildkit.dockerfile.v0","empty_layer":true},{"created":"2024-11-06T09:00:45.222159716Z","created_by":"RUN /bin/sh -c apk update && apk add --no-cache \"tiff>=4.4.0-r4\" # buildkit","comment":"buildkit.dockerfile.v0"},{"created":"2024-11-06T09:00:45.322815368Z","created_by":"COPY nginx.conf /etc/nginx/templates/default.conf.template # buildkit","comment":"buildkit.dockerfile.v0"},{"created":"2024-11-06T09:00:45.445507483Z","created_by":"COPY ./index.html /usr/share/nginx/html/ # buildkit","comment":"buildkit.dockerfile.v0"},{"created":"2024-11-06T09:00:45.581245721Z","created_by":"COPY ./dist/oauth2-redirect.html /usr/share/nginx/html/ # buildkit","comment":"buildkit.dockerfile.v0"},{"created":"2024-11-11T11:38:46.002112741Z","created_by":"COPY ./dist/* /usr/share/nginx/html/dist/ # buildkit","comment":"buildkit.dockerfile.v0"},{"created":"2024-11-11T11:38:46.065746784Z","created_by":"COPY ./docker-run.sh /docker-entrypoint.d/91-docker-run.sh # buildkit","comment":"buildkit.dockerfile.v0"},{"created":"2024-11-11T11:38:46.357162273Z","created_by":"RUN /bin/sh -c chmod +x /docker-entrypoint.d/91-docker-run.sh # buildkit","comment":"buildkit.dockerfile.v0"},{"created":"2024-11-11T11:38:46.357162273Z","created_by":"EXPOSE map[8080/tcp:{}]","comment":"buildkit.dockerfile.v0","empty_layer":true}],"os":"linux","rootfs":{"type":"layers","diff_ids":["sha256:63ca1fbb43ae5034640e5e6cb3e083e05c290072c5366fcaa9d62435a4cced85","sha256:4e9e0d6ba2ccd65ed0dccce11c38e32e28b944a57c9f82604854c6cd0e900f13","sha256:1241fe31c0bf54709b7a053b680aafb797161d9002b251ede1559a9ab83b4663","sha256:f80bfdacda57223a362ec6d1ac77fdfb11623ef0cc779bf48e320e043620e612","sha256:0de02d5b2d31162b8020d5648ce9d2bb30ac1b0c2702653f18bfe5914e70e83f","sha256:6033613561cc0cd06570a172176efdbc8f342ec413e93e31d835558bb23940df","sha256:a533c9e2e114a588af1ff6d72e1b93eeca56286a10b049d6a5df3d3a2a9928de","sha256:528b47987bcf9ea4a7dde4389762283413e7318000eb2ec58ef4b93dd6b8a629","sha256:3ac30a7618dd0b72fbcdc14b78f103d643e870c3e63cdc470d43090d991de406","sha256:770e0cdfbcb862807a48481716295a6af9141b6689c2e38f1f7dce4e23a16893","sha256:d31b57c158c9662e65528bbd3a299841ea56c98d6174282b813631ae008697ab","sha256:fb8b8ec11cc987218c2af8180795a5e1de743549de99698f2c6c1d6eee8f733c","sha256:070da6dfeb5c17a399c777e5aa43558938904eae098c74b0c45c8cf4fe7b5b4d","sha256:929c1ba9db66feaeec3b88d9adf5e3b92549eb963d41526e08127e5806b4102b","sha256:a40f7704e9e17defc1806287585ee3eef3e3eae1b41a29e7e4c7e25a6380d864"]}}
